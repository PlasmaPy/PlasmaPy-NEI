[metadata]
name = plasmapy_nei
author = PlasmaPy-NEI Developers
author_email = namurphy@cfa.harvard.edu
license = BSD 3-clause
license_file = LICENSE.md
url = https://nei.plasmapy.org
description = Package for non-equilibrium ionization modeling of plasma
long_description = file: README.rst
classifiers=
  Development Status :: 3 - Alpha
  Intended Audience :: Science/Research
  License :: OSI Approved :: BSD License
  Operating System :: OS Independent
  Programming Language :: Python :: 3
  Programming Language :: Python :: 3.8
  Programming Language :: Python :: 3.9
  Programming Language :: Python :: 3.10
  Programming Language :: Python :: Implementation :: CPython
  Topic :: Scientific/Engineering :: Physics
  Topic :: Scientific/Engineering :: Astronomy

[options]
zip_safe = False
packages = find:
python_requires = >=3.8
setup_requires =
  setuptools_scm
install_requires =
  astropy >= 4.3.1
  h5py >= 3.0
  matplotlib >= 3.4
  numpy >= 1.20
  plasmapy >= 0.7
  scipy >= 1.5
  setuptools >= 50.0

[options.extras_require]
extras =
  pre-commit
  setuptools_scm
  tox
test =
  %(extras)s
  dlint
  flake8
  flake8-absolute-import
  flake8-rst-docstrings
  flake8-use-fstring
  hypothesis
  pydocstyle
  pygments
  pytest >= 6.0.0
  pytest-regressions
  pytest-xdist
docs =
  %(extras)s
  docutils
  ipykernel
  nbsphinx
  numpydoc
  pillow
  pygments >= 2.11.0
  sphinx >= 3.2.0
  sphinx-changelog
  sphinxcontrib-bibtex
  sphinx-copybutton
  sphinx-gallery
  sphinx-hoverxref >= 1.0.0
  sphinx_rtd_theme >= 1.0.0
  towncrier >= 19.2.0
developer =
  # install everything for developers
  # ought to functionally mirror requirements.txt
  %(docs)s
  %(extras)s
  %(tests)s

[options.package_data]
plasmapy_nei = data/*

[build_docs]
source-dir = docs
build-dir = docs/_build
all_files = 1

[tool:pytest]
minversion = 6.0
testpaths = "plasmapy_nei"
norecursedirs = "build" "docs/"
doctest_optionflags =
  NORMALIZE_WHITESPACE
  ELLIPSIS
  NUMBER
addopts = --doctest-modules --doctest-continue-on-failure
filterwarnings =
  ignore:.*Creating a LegacyVersion.*:DeprecationWarning

[flake8]
convention = numpy
extend-ignore =
  D105,
  D107,
  # Ignoring D202 allows blank lines to be put on either side of code "paragraphs" at the beginning of a function.
  D202,
  # D205 and D400 are ignored to allow the "one-liner" to exceed one
  # line, which is sometimes necessary for even concise descriptions of plasma
  # physics functions and classes.
  D205,
  # D302 is unnecessary as we are using Python 3.6+.
  D302,
  # D205 and D400 are ignored to allow the "one-liner" to exceed one
  # line, which is sometimes necessary for even concise descriptions of plasma
  # physics functions and classes.
  D400,
  # D403: First word of the first line should be properly capitalized ('Latex', not 'LaTeX') # Dominik: good job, pydocstyle /s
  D403,
  # E203 something something whitespace? TODO check again
  E203,
  E501,
  # E731 do not assign a lambda, use a def - Dominik: disagreed, lambdas have uses
  E731,
  F401,
  F405,
  # W605 invalid escape sequence,
  W605,
  RST210,
  RST213,
  # RST305 so that ReST substitutions in a different file can be used
  RST305,
  RST306
exclude =
  extern,
  sphinx,
  *test*,
  *parsetab.py,
  conftest.py,
  docs/conf.py,
  setup.py,
  .jupyter
# Use rst-roles and rst-directives to list roles and directives from
# Sphinx extensions so that they don't get flagged when using
# flake8-rst-docstrings.
rst-roles =
  attr
  cite
  cite:ct
  cite:cts
  cite:p
  cite:ps
  cite:t
  cite:ts
  class
  confval
  data
  event
  exc
  file
  func
  meth
  mod
  ref
  rst:dir
  term
rst-directives =
  confval
  deprecated
  event
  nbgallery
  rst:directive
  todo
enable-extensions =
  # Look for strings that have {} in them but aren't f-strings.
  # If there is a false positive from this in a file, put that in
  # per-file-ignores.
  FS003

[coverage:run]
omit =
  ci-helpers/*
  */tests/*
  plasmapy_nei/version.py

[coverage:report]
exclude_lines =
  coverage: ignore
  ImportError
  ModuleNotFoundError
  @vectorize
  @numba.vectorize
  @numba.jit
  @jit
  @numba.njit
  @njit
