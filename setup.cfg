[metadata]
name = plasmapy_nei
author = PlasmaPy-NEI Developers
author_email = namurphy@cfa.harvard.edu
license = BSD 3-clause
license_file = LICENSE.md
url = https://www.plasmapy.org
description = Package for non-equilibrium ionization of plasma
long_description = file: README.rst
classifiers=
  Development Status :: 3 - Alpha
  Intended Audience :: Science/Research
  License :: OSI Approved :: BSD License
  Operating System :: OS Independent
  Programming Language :: Python :: 3
  Programming Language :: Python :: 3.7
  Programming Language :: Python :: 3.8
  Programming Language :: Python :: 3.8
  Programming Language :: Python :: 3.9
  Programming Language :: Python :: Implementation :: CPython
  Topic :: Scientific/Engineering :: Physics
  Topic :: Scientific/Engineering :: Astronomy

[options]
zip_safe = False
packages = find:
python_requires = >=3.7
setup_requires =
    setuptools_scm
install_requires =
    astropy >= 4.0
    h5py >= 3.0
    matplotlib >= 3.1
    numpy >= 1.18
    plasmapy >= 0.6
    scipy >= 1.3
    setuptools >= 47.0
    numba >= 0.47.0
    numba_scipy

[options.entry_points]
console_scripts =
    astropy-package-template-example = packagename.example_mod:main

[options.extras_require]
all =
test =
    pytest
    pytest-doctestplus
    pytest-cov
docs =
    sphinx <= 2.4.4
    sphinx-automodapi

[options.package_data]
plasmapy_nei = data/*

[tool:pytest]
minversion = 5.1
testpaths = "plasmapy_nei" "docs/"
norecursedirs = "build" "docs/_build" "examples" "auto_examples"
doctest_optionflags =
    NORMALIZE_WHITESPACE
    ELLIPSIS
    NUMBER
addopts = --doctest-modules --doctest-continue-on-failure --ignore=docs/conf.py

[coverage:run]
omit =
  plasmapy_nei/__init*
  plasmapy_nei/conftest.py
  plasmapy_nei/*setup_package*
  plasmapy_nei/tests/*
  plasmapy_nei/*/tests/*
  plasmapy_nei/extern/*
  plasmapy_nei/version*
  */plasmapy_nei/__init*
  */plasmapy_nei/conftest.py
  */plasmapy_nei/*setup_package*
  */plasmapy_nei/tests/*
  */plasmapy_nei/*/tests/*
  */plasmapy_nei/extern/*
  */plasmapy_nei/version*

[coverage:report]
exclude_lines =
  # Have to re-enable the standard pragma
  pragma: no cover
  # Don't complain about packages we have installed
  except ImportError
  # Don't complain if tests don't hit assertions
  raise AssertionError
  raise NotImplementedError
  # Don't complain about script hooks
  def main\(.*\):
  # Ignore branches that don't pertain to this version of Python
  pragma: py{ignore_python_version}
  # Don't complain about IPython completion helper
  def _ipython_key_completions_

[pycodestyle]
# E101 - mix of tabs and spaces
# W191 - use of tabs
# W291 - trailing whitespace
# W292 - no newline at end of file
# W293 - trailing whitespace
# W391 - blank line at end of file
# E111 - 4 spaces per indentation level
# E112 - 4 spaces per indentation level
# E113 - 4 spaces per indentation level
# E901 - SyntaxError or IndentationError
# E902 - IOError
# select = E226,E241,E242,E704,W504
exclude = version.py,build
max-line-length = 88

[pydocstyle]
# D302 is unnecessary as we are using Python 3.7+. Ignoring D202 allows blank
# lines to be put on either side of code "paragraphs" at the beginning of a
# function. D205 and D400 are ignored to allow the "one-liner" to exceed one
# line, which is sometimes necessary for even concise descriptions of plasma
# physics functions and classes.
convention = numpy
add-select = D402,D413
add-ignore = D202,D205,D302,D400,D105

[flake8]
convention = numpy
extend-ignore =
    D105,
    D107,
    # Ignoring D202 allows blank lines to be put on either side of code "paragraphs" at the beginning of a function.
    D202,
    # D205 and D400 are ignored to allow the "one-liner" to exceed one
    # line, which is sometimes necessary for even concise descriptions of plasma
    # physics functions and classes.
    D205,
    # D302 is unnecessary as we are using Python 3.6+.
    D302,
    # D205 and D400 are ignored to allow the "one-liner" to exceed one
    # line, which is sometimes necessary for even concise descriptions of plasma
    # physics functions and classes.
    D400,
    # D403: First word of the first line should be properly capitalized ('Latex', not 'LaTeX') # Dominik: good job, pydocstyle /s
    D403,
    # E203 something something whitespace? TODO check again
    E203,
    E501,
    # E731 do not assign a lambda, use a def - Dominik: disagreed, lambdas have uses
    E731,
    F401,
    F405,
    # W605 invalid escape sequence,
    W605,
    RST210,
    RST213,
    RST306
exclude =
    extern,
    sphinx,
    *test*,
    *parsetab.py,
    conftest.py,
    docs/conf.py,
    setup.py,
    .jupyter
rst-roles =
    attr
    class
    confval
    data
    event
    exc
    file
    func
    meth
    mod
    ref
    rst:dir
rst-directives =
    confval
    deprecated
    event
    nbgallery
    rst:directive
    todo

[isort]
# Set sorting of imports to be consistent with black formatting
line_length=88
multi_line_output=3
include_trailing_comma: True
